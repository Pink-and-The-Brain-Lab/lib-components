import { Component, Inject, ViewChild } from '@angular/core';
import { ImageCropperComponent } from 'ngx-image-cropper';
import { IMAGE_DATA } from '../modal/interfaces/image-data.const';
import { MODAL_SERVICE_DATA } from '../modal/interfaces/modal-service-data.const';
import * as i0 from "@angular/core";
import * as i1 from "../avatar/avatar.component";
import * as i2 from "ngx-image-cropper";
import * as i3 from "../range/range.component";
export class CropperComponent {
    constructor(imageFile, modalService) {
        this.imageFile = imageFile;
        this.modalService = modalService;
        this.imageCropper = {};
        this.imageCroppedFile = '';
        this.imageRotation = 0;
        this.imageFlipH = false;
        this.imageZoom = 1;
        this.imageCroppedFile = imageFile;
    }
    imageCropped(event) {
        this.imageCroppedFile = event.objectUrl || this.imageFile;
        this.modalService.getComponentResultData(this.imageCroppedFile);
    }
    selectedRange(event) {
        const baseDeg = 45;
        const maxDeg = 180;
        const parsedRange = parseInt(event);
        const totalToRotate = (parsedRange * maxDeg) / 100 / baseDeg;
        this.imageRotation = totalToRotate;
    }
    rotateImage() {
        this.imageRotation++;
    }
    invertImage() {
        this.imageFlipH = !this.imageFlipH;
    }
    zoomOutImage() {
        if (this.imageZoom <= 1)
            return;
        this.imageZoom--;
    }
    zoomInImage() {
        if (this.imageZoom >= 10)
            return;
        this.imageZoom++;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.10", ngImport: i0, type: CropperComponent, deps: [{ token: IMAGE_DATA }, { token: MODAL_SERVICE_DATA }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.10", type: CropperComponent, selector: "cdk-cropper", viewQueries: [{ propertyName: "imageCropper", first: true, predicate: ImageCropperComponent, descendants: true }], ngImport: i0, template: "<div class=\"d-flex align-items-center flex-column\">\r\n    <cdk-avatar\r\n        size=\"xl\"\r\n        [imageUrl]=\"imageCroppedFile\"\r\n    ></cdk-avatar>\r\n\r\n    <div class=\"preview mt-4\">\r\n        <image-cropper\r\n            [imageURL]=\"imageFile\"\r\n            [aspectRatio]=\"1 / 1\"\r\n            [canvasRotation]=\"imageRotation\"\r\n            [maintainAspectRatio]=\"false\"\r\n            [transform]=\"{\r\n                flipH: imageFlipH,\r\n                scale: imageZoom\r\n            }\"\r\n            (imageCropped)=\"imageCropped($event)\"\r\n        ></image-cropper>\r\n    </div>\r\n\r\n    <div class=\"controls mt-2 w-100\">\r\n        <div class=\"row\">\r\n            <div class=\"col-6 d-flex align-items-center justify-content-between\">\r\n                <span class=\"me-2\">Rotate</span>\r\n                <cdk-range (selectedRange)=\"selectedRange($event)\"></cdk-range>\r\n            </div>\r\n\r\n            <div class=\"col-6\">\r\n                <div class=\"d-flex align-items-center justify-content-between\">\r\n                    <!--  tooltip=\"Rotate\" -->\r\n                    <i class=\"bi bi-arrow-clockwise\" placement=\"top\" (click)=\"rotateImage()\"></i>\r\n                    <!-- tooltip=\"Invert\" -->\r\n                    <i class=\"bi bi-symmetry-vertical\" placement=\"top\" (click)=\"invertImage()\"></i>\r\n                    <!-- tooltip=\"Zoom out\" -->\r\n                    <i class=\"bi bi-dash\" placement=\"top\" (click)=\"zoomOutImage()\"></i>\r\n                    <!--  tooltip=\"Zoom in\" -->\r\n                    <i class=\"bi bi-plus\" placement=\"top\" (click)=\"zoomInImage()\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>", styles: ["image-cropper{padding:0!important;width:300px;height:300px}span{color:var(--emphasis-medium);font-size:.6875em;font-weight:600;line-height:.75em}cdk-range{display:contents}i{font-size:.875em;cursor:pointer;color:var(--emphasis-medium)}\n"], dependencies: [{ kind: "component", type: i1.AvatarComponent, selector: "cdk-avatar", inputs: ["imageUrl", "size", "mask", "maskType", "secondMaskType", "status", "color", "name"] }, { kind: "component", type: i2.ImageCropperComponent, selector: "image-cropper", inputs: ["imageChangedEvent", "imageURL", "imageBase64", "imageFile", "imageAltText", "output", "format", "transform", "maintainAspectRatio", "aspectRatio", "resetCropOnAspectRatioChange", "resizeToWidth", "resizeToHeight", "cropperMinWidth", "cropperMinHeight", "cropperMaxHeight", "cropperMaxWidth", "cropperStaticWidth", "cropperStaticHeight", "canvasRotation", "initialStepSize", "roundCropper", "onlyScaleDown", "imageQuality", "autoCrop", "backgroundColor", "containWithinAspectRatio", "hideResizeSquares", "allowMoveImage", "cropper", "alignImage", "disabled", "hidden"], outputs: ["imageCropped", "startCropImage", "imageLoaded", "cropperReady", "loadImageFailed", "transformChange"] }, { kind: "component", type: i3.RangeComponent, selector: "cdk-range", inputs: ["min", "max", "step"], outputs: ["selectedRange"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.10", ngImport: i0, type: CropperComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cdk-cropper', template: "<div class=\"d-flex align-items-center flex-column\">\r\n    <cdk-avatar\r\n        size=\"xl\"\r\n        [imageUrl]=\"imageCroppedFile\"\r\n    ></cdk-avatar>\r\n\r\n    <div class=\"preview mt-4\">\r\n        <image-cropper\r\n            [imageURL]=\"imageFile\"\r\n            [aspectRatio]=\"1 / 1\"\r\n            [canvasRotation]=\"imageRotation\"\r\n            [maintainAspectRatio]=\"false\"\r\n            [transform]=\"{\r\n                flipH: imageFlipH,\r\n                scale: imageZoom\r\n            }\"\r\n            (imageCropped)=\"imageCropped($event)\"\r\n        ></image-cropper>\r\n    </div>\r\n\r\n    <div class=\"controls mt-2 w-100\">\r\n        <div class=\"row\">\r\n            <div class=\"col-6 d-flex align-items-center justify-content-between\">\r\n                <span class=\"me-2\">Rotate</span>\r\n                <cdk-range (selectedRange)=\"selectedRange($event)\"></cdk-range>\r\n            </div>\r\n\r\n            <div class=\"col-6\">\r\n                <div class=\"d-flex align-items-center justify-content-between\">\r\n                    <!--  tooltip=\"Rotate\" -->\r\n                    <i class=\"bi bi-arrow-clockwise\" placement=\"top\" (click)=\"rotateImage()\"></i>\r\n                    <!-- tooltip=\"Invert\" -->\r\n                    <i class=\"bi bi-symmetry-vertical\" placement=\"top\" (click)=\"invertImage()\"></i>\r\n                    <!-- tooltip=\"Zoom out\" -->\r\n                    <i class=\"bi bi-dash\" placement=\"top\" (click)=\"zoomOutImage()\"></i>\r\n                    <!--  tooltip=\"Zoom in\" -->\r\n                    <i class=\"bi bi-plus\" placement=\"top\" (click)=\"zoomInImage()\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>", styles: ["image-cropper{padding:0!important;width:300px;height:300px}span{color:var(--emphasis-medium);font-size:.6875em;font-weight:600;line-height:.75em}cdk-range{display:contents}i{font-size:.875em;cursor:pointer;color:var(--emphasis-medium)}\n"] }]
        }], ctorParameters: () => [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [IMAGE_DATA]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [MODAL_SERVICE_DATA]
                }] }], propDecorators: { imageCropper: [{
                type: ViewChild,
                args: [ImageCropperComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JvcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb21wb25lbnRzL3NyYy9saWIvY3JvcHBlci9jcm9wcGVyLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvbXBvbmVudHMvc3JjL2xpYi9jcm9wcGVyL2Nyb3BwZXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBcUIscUJBQXFCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUM3RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDbEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sOENBQThDLENBQUM7Ozs7O0FBT2xGLE1BQU0sT0FBTyxnQkFBZ0I7SUFRM0IsWUFDNkIsU0FBaUIsRUFDVCxZQUFpQjtRQUR6QixjQUFTLEdBQVQsU0FBUyxDQUFRO1FBQ1QsaUJBQVksR0FBWixZQUFZLENBQUs7UUFScEIsaUJBQVksR0FBMEIsRUFBMkIsQ0FBQztRQUNwRyxxQkFBZ0IsR0FBRyxFQUFFLENBQUM7UUFDdEIsa0JBQWEsR0FBRyxDQUFDLENBQUM7UUFDbEIsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUNuQixjQUFTLEdBQUcsQ0FBQyxDQUFDO1FBTVosSUFBSSxDQUFDLGdCQUFnQixHQUFHLFNBQVMsQ0FBQztJQUNwQyxDQUFDO0lBRUQsWUFBWSxDQUFDLEtBQXdCO1FBQ25DLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDMUQsSUFBSSxDQUFDLFlBQVksQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQTtJQUNqRSxDQUFDO0lBRUQsYUFBYSxDQUFDLEtBQWE7UUFDekIsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDO1FBQ25CLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQztRQUNuQixNQUFNLFdBQVcsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEMsTUFBTSxhQUFhLEdBQUcsQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDLEdBQUcsR0FBRyxHQUFHLE9BQU8sQ0FBQztRQUM3RCxJQUFJLENBQUMsYUFBYSxHQUFHLGFBQWEsQ0FBQztJQUNyQyxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxZQUFZO1FBQ1YsSUFBSSxJQUFJLENBQUMsU0FBUyxJQUFJLENBQUM7WUFBRSxPQUFPO1FBQ2hDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBRUQsV0FBVztRQUNULElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxFQUFFO1lBQUUsT0FBTztRQUNqQyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDbkIsQ0FBQzsrR0E1Q1UsZ0JBQWdCLGtCQVNqQixVQUFVLGFBQ1Ysa0JBQWtCO21HQVZqQixnQkFBZ0IsaUdBRWhCLHFCQUFxQixnRENabEMsOHZEQTBDTTs7NEZEaENPLGdCQUFnQjtrQkFMNUIsU0FBUzsrQkFDRSxhQUFhOzswQkFhcEIsTUFBTTsyQkFBQyxVQUFVOzswQkFDakIsTUFBTTsyQkFBQyxrQkFBa0I7eUNBUk0sWUFBWTtzQkFBN0MsU0FBUzt1QkFBQyxxQkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEltYWdlQ3JvcHBlZEV2ZW50LCBJbWFnZUNyb3BwZXJDb21wb25lbnQgfSBmcm9tICduZ3gtaW1hZ2UtY3JvcHBlcic7XHJcbmltcG9ydCB7IElNQUdFX0RBVEEgfSBmcm9tICcuLi9tb2RhbC9pbnRlcmZhY2VzL2ltYWdlLWRhdGEuY29uc3QnO1xyXG5pbXBvcnQgeyBNT0RBTF9TRVJWSUNFX0RBVEEgfSBmcm9tICcuLi9tb2RhbC9pbnRlcmZhY2VzL21vZGFsLXNlcnZpY2UtZGF0YS5jb25zdCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2Nkay1jcm9wcGVyJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vY3JvcHBlci5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vY3JvcHBlci5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDcm9wcGVyQ29tcG9uZW50IHtcclxuXHJcbiAgQFZpZXdDaGlsZChJbWFnZUNyb3BwZXJDb21wb25lbnQpIGltYWdlQ3JvcHBlcjogSW1hZ2VDcm9wcGVyQ29tcG9uZW50ID0ge30gYXMgSW1hZ2VDcm9wcGVyQ29tcG9uZW50O1xyXG4gIGltYWdlQ3JvcHBlZEZpbGUgPSAnJztcclxuICBpbWFnZVJvdGF0aW9uID0gMDtcclxuICBpbWFnZUZsaXBIID0gZmFsc2U7XHJcbiAgaW1hZ2Vab29tID0gMTtcclxuICBcclxuICBjb25zdHJ1Y3RvciAoXHJcbiAgICBASW5qZWN0KElNQUdFX0RBVEEpIHB1YmxpYyBpbWFnZUZpbGU6IHN0cmluZyxcclxuICAgIEBJbmplY3QoTU9EQUxfU0VSVklDRV9EQVRBKSBwdWJsaWMgbW9kYWxTZXJ2aWNlOiBhbnksXHJcbiAgKSB7XHJcbiAgICB0aGlzLmltYWdlQ3JvcHBlZEZpbGUgPSBpbWFnZUZpbGU7XHJcbiAgfVxyXG5cclxuICBpbWFnZUNyb3BwZWQoZXZlbnQ6IEltYWdlQ3JvcHBlZEV2ZW50KSB7XHJcbiAgICB0aGlzLmltYWdlQ3JvcHBlZEZpbGUgPSBldmVudC5vYmplY3RVcmwgfHwgdGhpcy5pbWFnZUZpbGU7XHJcbiAgICB0aGlzLm1vZGFsU2VydmljZS5nZXRDb21wb25lbnRSZXN1bHREYXRhKHRoaXMuaW1hZ2VDcm9wcGVkRmlsZSlcclxuICB9XHJcblxyXG4gIHNlbGVjdGVkUmFuZ2UoZXZlbnQ6IHN0cmluZykge1xyXG4gICAgY29uc3QgYmFzZURlZyA9IDQ1O1xyXG4gICAgY29uc3QgbWF4RGVnID0gMTgwO1xyXG4gICAgY29uc3QgcGFyc2VkUmFuZ2UgPSBwYXJzZUludChldmVudCk7XHJcbiAgICBjb25zdCB0b3RhbFRvUm90YXRlID0gKHBhcnNlZFJhbmdlICogbWF4RGVnKSAvIDEwMCAvIGJhc2VEZWc7XHJcbiAgICB0aGlzLmltYWdlUm90YXRpb24gPSB0b3RhbFRvUm90YXRlO1xyXG4gIH1cclxuXHJcbiAgcm90YXRlSW1hZ2UoKSB7XHJcbiAgICB0aGlzLmltYWdlUm90YXRpb24rKztcclxuICB9XHJcblxyXG4gIGludmVydEltYWdlKCkge1xyXG4gICAgdGhpcy5pbWFnZUZsaXBIID0gIXRoaXMuaW1hZ2VGbGlwSDtcclxuICB9XHJcblxyXG4gIHpvb21PdXRJbWFnZSgpIHtcclxuICAgIGlmICh0aGlzLmltYWdlWm9vbSA8PSAxKSByZXR1cm47XHJcbiAgICB0aGlzLmltYWdlWm9vbS0tO1xyXG4gIH1cclxuXHJcbiAgem9vbUluSW1hZ2UoKSB7XHJcbiAgICBpZiAodGhpcy5pbWFnZVpvb20gPj0gMTApIHJldHVybjtcclxuICAgIHRoaXMuaW1hZ2Vab29tKys7XHJcbiAgfVxyXG59XHJcbiIsIjxkaXYgY2xhc3M9XCJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGZsZXgtY29sdW1uXCI+XHJcbiAgICA8Y2RrLWF2YXRhclxyXG4gICAgICAgIHNpemU9XCJ4bFwiXHJcbiAgICAgICAgW2ltYWdlVXJsXT1cImltYWdlQ3JvcHBlZEZpbGVcIlxyXG4gICAgPjwvY2RrLWF2YXRhcj5cclxuXHJcbiAgICA8ZGl2IGNsYXNzPVwicHJldmlldyBtdC00XCI+XHJcbiAgICAgICAgPGltYWdlLWNyb3BwZXJcclxuICAgICAgICAgICAgW2ltYWdlVVJMXT1cImltYWdlRmlsZVwiXHJcbiAgICAgICAgICAgIFthc3BlY3RSYXRpb109XCIxIC8gMVwiXHJcbiAgICAgICAgICAgIFtjYW52YXNSb3RhdGlvbl09XCJpbWFnZVJvdGF0aW9uXCJcclxuICAgICAgICAgICAgW21haW50YWluQXNwZWN0UmF0aW9dPVwiZmFsc2VcIlxyXG4gICAgICAgICAgICBbdHJhbnNmb3JtXT1cIntcclxuICAgICAgICAgICAgICAgIGZsaXBIOiBpbWFnZUZsaXBILFxyXG4gICAgICAgICAgICAgICAgc2NhbGU6IGltYWdlWm9vbVxyXG4gICAgICAgICAgICB9XCJcclxuICAgICAgICAgICAgKGltYWdlQ3JvcHBlZCk9XCJpbWFnZUNyb3BwZWQoJGV2ZW50KVwiXHJcbiAgICAgICAgPjwvaW1hZ2UtY3JvcHBlcj5cclxuICAgIDwvZGl2PlxyXG5cclxuICAgIDxkaXYgY2xhc3M9XCJjb250cm9scyBtdC0yIHctMTAwXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLTYgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlblwiPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtZS0yXCI+Um90YXRlPC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPGNkay1yYW5nZSAoc2VsZWN0ZWRSYW5nZSk9XCJzZWxlY3RlZFJhbmdlKCRldmVudClcIj48L2Nkay1yYW5nZT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLTZcIj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPCEtLSAgdG9vbHRpcD1cIlJvdGF0ZVwiIC0tPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiYmkgYmktYXJyb3ctY2xvY2t3aXNlXCIgcGxhY2VtZW50PVwidG9wXCIgKGNsaWNrKT1cInJvdGF0ZUltYWdlKClcIj48L2k+XHJcbiAgICAgICAgICAgICAgICAgICAgPCEtLSB0b29sdGlwPVwiSW52ZXJ0XCIgLS0+XHJcbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJiaSBiaS1zeW1tZXRyeS12ZXJ0aWNhbFwiIHBsYWNlbWVudD1cInRvcFwiIChjbGljayk9XCJpbnZlcnRJbWFnZSgpXCI+PC9pPlxyXG4gICAgICAgICAgICAgICAgICAgIDwhLS0gdG9vbHRpcD1cIlpvb20gb3V0XCIgLS0+XHJcbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJiaSBiaS1kYXNoXCIgcGxhY2VtZW50PVwidG9wXCIgKGNsaWNrKT1cInpvb21PdXRJbWFnZSgpXCI+PC9pPlxyXG4gICAgICAgICAgICAgICAgICAgIDwhLS0gIHRvb2x0aXA9XCJab29tIGluXCIgLS0+XHJcbiAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJiaSBiaS1wbHVzXCIgcGxhY2VtZW50PVwidG9wXCIgKGNsaWNrKT1cInpvb21JbkltYWdlKClcIj48L2k+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuXHJcbjwvZGl2PiJdfQ==