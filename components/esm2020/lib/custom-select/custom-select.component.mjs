import { Component, ContentChild, EventEmitter, Input, Output, TemplateRef } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../popover/popover.directive";
import * as i3 from "@angular/forms";
export class CustomSelectComponent {
    constructor() {
        this.options = [];
        this.placeholder = 'Selecione';
        this.modelProperty = '';
        this.isValid = false;
        this.valueChanges = new EventEmitter();
        this.showOptions = false;
        this.formGroup = new FormGroup({
            input: new FormControl('')
        });
        this.closePopover = () => this.showOptions = false;
    }
    ngOnInit() {
        this.filterOptions();
    }
    ngOnChanges({ selectedOption }) {
        if (selectedOption && !selectedOption.firstChange && selectedOption.currentValue !== selectedOption.previousValue)
            this.filterOptions();
    }
    filterOptions() {
        if (this.selectedOption)
            this.formGroup.controls.input.setValue(this.selectedOption[this.modelProperty]);
    }
    getOption(option) {
        this.selectedOption = option;
        this.valueChanges.emit(this.selectedOption);
        this.formGroup.controls.input.setValue(option[this.modelProperty]);
        this.closePopover();
    }
}
CustomSelectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.1.2", ngImport: i0, type: CustomSelectComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CustomSelectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.1.2", type: CustomSelectComponent, selector: "cdk-custom-select", inputs: { options: "options", placeholder: "placeholder", modelProperty: "modelProperty", selectedOption: "selectedOption", isValid: "isValid" }, outputs: { valueChanges: "valueChanges" }, queries: [{ propertyName: "customTemplate", first: true, predicate: ["customTemplate"], descendants: true, read: TemplateRef, static: true }, { propertyName: "selectedTemplate", first: true, predicate: ["selectedTemplate"], descendants: true, read: TemplateRef, static: true }], usesOnChanges: true, ngImport: i0, template: "<div class=\"content\">\r\n  <div class=\"row-form position-relative\" #content>\r\n    <div class=\"country-flag\" *ngIf=\"selectedOption\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"\r\n          selectedTemplate;\r\n          context: { $implicit: selectedOption }\r\n        \"\r\n      ></ng-container>\r\n    </div>\r\n\r\n    <form [formGroup]=\"formGroup\">\r\n      <input\r\n        type=\"text\"\r\n        (focus)=\"showOptions = true\"\r\n        [attr.placeholder]=\"placeholder\"\r\n        formControlName=\"input\"\r\n        [class.not-empty]=\"selectedOption[modelProperty]\"\r\n        [class.success]=\"isValid\"\r\n        readonly\r\n        id=\"select\"\r\n      />\r\n      <label for=\"select\">code</label>\r\n    </form>\r\n\r\n    <span class=\"arrow\">\r\n      <i class=\"bi bi-chevron-down\" *ngIf=\"!showOptions\"></i>\r\n      <i class=\"bi bi-chevron-up\" *ngIf=\"showOptions\"></i>\r\n    </span>\r\n  </div>\r\n</div>\r\n\r\n<ul\r\n  class=\"options m-0\"\r\n  *cdkPopover=\"\r\n    showOptions;\r\n    target: content;\r\n    close: closePopover;\r\n    positions: 'SBST'\r\n  \"\r\n>\r\n  <ng-container\r\n    *ngFor=\"\r\n      let item of options;\r\n      let first = first;\r\n      let last = last;\r\n      let index = index\r\n    \"\r\n  >\r\n    <li\r\n      class=\"custom-option\"\r\n      [class.first]=\"first\"\r\n      [class.last]=\"last\"\r\n      (click)=\"getOption(item)\"\r\n    >\r\n      <ng-container\r\n        *ngTemplateOutlet=\"customTemplate; context: { $implicit: item, index }\"\r\n      ></ng-container>\r\n    </li>\r\n    <li class=\"divider\" *ngIf=\"index === 1\"></li>\r\n  </ng-container>\r\n</ul>\r\n", styles: [".content{box-shadow:0 2px 0 -1px #4e5463}.content .country-flag{position:absolute;left:3px;top:11px}.content .arrow{position:absolute;right:3px;top:11px;color:#7f858c}.content .not-empty{padding-left:30px}.content:focus{box-shadow:0 3px 0 -1px #4e5463}.content.invalid{box-shadow:0 2px 0 -1px #ff5d4f}.content.invalid:focus{box-shadow:0 3px 0 -1px #ff5d4f}.content.success{box-shadow:0 2px 0 -1px #00cb5f}.content.success:focus{box-shadow:0 3px 0 -1px #00cb5f}.content.warning{box-shadow:0 2px 0 -1px #fec23a}.content.warning:focus{box-shadow:0 3px 0 -1px #fec23a}.content.info{box-shadow:0 2px 0 -1px #109cf1}.content.info:focus{box-shadow:0 3px 0 -1px #109cf1}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i2.PopoverDirective, selector: "[cdkPopover]", inputs: ["cdkPopover", "cdkPopoverTarget", "cdkPopoverPositions", "cdkPopoverClose"] }, { kind: "directive", type: i3.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i3.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i3.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i3.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.1.2", ngImport: i0, type: CustomSelectComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cdk-custom-select', template: "<div class=\"content\">\r\n  <div class=\"row-form position-relative\" #content>\r\n    <div class=\"country-flag\" *ngIf=\"selectedOption\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"\r\n          selectedTemplate;\r\n          context: { $implicit: selectedOption }\r\n        \"\r\n      ></ng-container>\r\n    </div>\r\n\r\n    <form [formGroup]=\"formGroup\">\r\n      <input\r\n        type=\"text\"\r\n        (focus)=\"showOptions = true\"\r\n        [attr.placeholder]=\"placeholder\"\r\n        formControlName=\"input\"\r\n        [class.not-empty]=\"selectedOption[modelProperty]\"\r\n        [class.success]=\"isValid\"\r\n        readonly\r\n        id=\"select\"\r\n      />\r\n      <label for=\"select\">code</label>\r\n    </form>\r\n\r\n    <span class=\"arrow\">\r\n      <i class=\"bi bi-chevron-down\" *ngIf=\"!showOptions\"></i>\r\n      <i class=\"bi bi-chevron-up\" *ngIf=\"showOptions\"></i>\r\n    </span>\r\n  </div>\r\n</div>\r\n\r\n<ul\r\n  class=\"options m-0\"\r\n  *cdkPopover=\"\r\n    showOptions;\r\n    target: content;\r\n    close: closePopover;\r\n    positions: 'SBST'\r\n  \"\r\n>\r\n  <ng-container\r\n    *ngFor=\"\r\n      let item of options;\r\n      let first = first;\r\n      let last = last;\r\n      let index = index\r\n    \"\r\n  >\r\n    <li\r\n      class=\"custom-option\"\r\n      [class.first]=\"first\"\r\n      [class.last]=\"last\"\r\n      (click)=\"getOption(item)\"\r\n    >\r\n      <ng-container\r\n        *ngTemplateOutlet=\"customTemplate; context: { $implicit: item, index }\"\r\n      ></ng-container>\r\n    </li>\r\n    <li class=\"divider\" *ngIf=\"index === 1\"></li>\r\n  </ng-container>\r\n</ul>\r\n", styles: [".content{box-shadow:0 2px 0 -1px #4e5463}.content .country-flag{position:absolute;left:3px;top:11px}.content .arrow{position:absolute;right:3px;top:11px;color:#7f858c}.content .not-empty{padding-left:30px}.content:focus{box-shadow:0 3px 0 -1px #4e5463}.content.invalid{box-shadow:0 2px 0 -1px #ff5d4f}.content.invalid:focus{box-shadow:0 3px 0 -1px #ff5d4f}.content.success{box-shadow:0 2px 0 -1px #00cb5f}.content.success:focus{box-shadow:0 3px 0 -1px #00cb5f}.content.warning{box-shadow:0 2px 0 -1px #fec23a}.content.warning:focus{box-shadow:0 3px 0 -1px #fec23a}.content.info{box-shadow:0 2px 0 -1px #109cf1}.content.info:focus{box-shadow:0 3px 0 -1px #109cf1}\n"] }]
        }], propDecorators: { options: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], modelProperty: [{
                type: Input
            }], selectedOption: [{
                type: Input
            }], isValid: [{
                type: Input
            }], valueChanges: [{
                type: Output
            }], 
        // @ts-ignore
        customTemplate: [{
                type: ContentChild,
                args: ["customTemplate", { static: true, read: TemplateRef }]
            }], 
        // @ts-ignore
        selectedTemplate: [{
                type: ContentChild,
                args: ["selectedTemplate", { static: true, read: TemplateRef }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLXNlbGVjdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb21wb25lbnRzL3NyYy9saWIvY3VzdG9tLXNlbGVjdC9jdXN0b20tc2VsZWN0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2NvbXBvbmVudHMvc3JjL2xpYi9jdXN0b20tc2VsZWN0L2N1c3RvbS1zZWxlY3QuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBcUIsTUFBTSxFQUFpQixXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDcEksT0FBTyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7QUFPeEQsTUFBTSxPQUFPLHFCQUFxQjtJQUxsQztRQU9XLFlBQU8sR0FBUSxFQUFTLENBQUM7UUFDekIsZ0JBQVcsR0FBRyxXQUFXLENBQUM7UUFDMUIsa0JBQWEsR0FBRyxFQUFFLENBQUM7UUFFbkIsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUNmLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUssQ0FBQztRQVUvQyxnQkFBVyxHQUFHLEtBQUssQ0FBQztRQUVwQixjQUFTLEdBQUcsSUFBSSxTQUFTLENBQUM7WUFDeEIsS0FBSyxFQUFFLElBQUksV0FBVyxDQUFDLEVBQUUsQ0FBQztTQUMzQixDQUFDLENBQUM7UUFlSCxpQkFBWSxHQUFHLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO0tBUy9DO0lBdEJDLFFBQVE7UUFDTixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVELFdBQVcsQ0FBQyxFQUFFLGNBQWMsRUFBaUI7UUFDM0MsSUFBSSxjQUFjLElBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxJQUFJLGNBQWMsQ0FBQyxZQUFZLEtBQUssY0FBYyxDQUFDLGFBQWE7WUFBRSxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDMUksQ0FBQztJQUVELGFBQWE7UUFDWCxJQUFJLElBQUksQ0FBQyxjQUFjO1lBQ3JCLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztJQUNwRixDQUFDO0lBSUQsU0FBUyxDQUFDLE1BQVc7UUFDbkIsSUFBSSxDQUFDLGNBQWMsR0FBRyxNQUFNLENBQUM7UUFDN0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQzVDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO1FBQ25FLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN0QixDQUFDOztrSEEzQ1UscUJBQXFCO3NHQUFyQixxQkFBcUIsK1VBU3NCLFdBQVcsNkhBSVQsV0FBVyxnRUNyQnJFLDZwREE4REE7MkZEdERhLHFCQUFxQjtrQkFMakMsU0FBUzsrQkFDRSxtQkFBbUI7OEJBTXBCLE9BQU87c0JBQWYsS0FBSztnQkFDRyxXQUFXO3NCQUFuQixLQUFLO2dCQUNHLGFBQWE7c0JBQXJCLEtBQUs7Z0JBQ0csY0FBYztzQkFBdEIsS0FBSztnQkFDRyxPQUFPO3NCQUFmLEtBQUs7Z0JBQ0ksWUFBWTtzQkFBckIsTUFBTTs7UUFHUCxhQUFhO1FBQ2IsY0FBYztzQkFGYixZQUFZO3VCQUFDLGdCQUFnQixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUFFOztRQUtuRSxhQUFhO1FBQ2IsZ0JBQWdCO3NCQUZmLFlBQVk7dUJBQUMsa0JBQWtCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25DaGFuZ2VzLCBPbkluaXQsIE91dHB1dCwgU2ltcGxlQ2hhbmdlcywgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybUNvbnRyb2wsIEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnY2RrLWN1c3RvbS1zZWxlY3QnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9jdXN0b20tc2VsZWN0LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9jdXN0b20tc2VsZWN0LmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIEN1c3RvbVNlbGVjdENvbXBvbmVudDxUPiBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuXHJcbiAgQElucHV0KCkgb3B0aW9uczogVFtdID0gW10gYXMgYW55O1xyXG4gIEBJbnB1dCgpIHBsYWNlaG9sZGVyID0gJ1NlbGVjaW9uZSc7XHJcbiAgQElucHV0KCkgbW9kZWxQcm9wZXJ0eSA9ICcnO1xyXG4gIEBJbnB1dCgpIHNlbGVjdGVkT3B0aW9uOiBhbnk7XHJcbiAgQElucHV0KCkgaXNWYWxpZCA9IGZhbHNlO1xyXG4gIEBPdXRwdXQoKSB2YWx1ZUNoYW5nZXMgPSBuZXcgRXZlbnRFbWl0dGVyPFQ+KCk7XHJcblxyXG4gIEBDb250ZW50Q2hpbGQoXCJjdXN0b21UZW1wbGF0ZVwiLCB7IHN0YXRpYzogdHJ1ZSwgcmVhZDogVGVtcGxhdGVSZWYgfSlcclxuICAvLyBAdHMtaWdub3JlXHJcbiAgY3VzdG9tVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XHJcblxyXG4gIEBDb250ZW50Q2hpbGQoXCJzZWxlY3RlZFRlbXBsYXRlXCIsIHsgc3RhdGljOiB0cnVlLCByZWFkOiBUZW1wbGF0ZVJlZiB9KVxyXG4gIC8vIEB0cy1pZ25vcmVcclxuICBzZWxlY3RlZFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG5cclxuICBzaG93T3B0aW9ucyA9IGZhbHNlO1xyXG5cclxuICBmb3JtR3JvdXAgPSBuZXcgRm9ybUdyb3VwKHtcclxuICAgIGlucHV0OiBuZXcgRm9ybUNvbnRyb2woJycpXHJcbiAgfSk7XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5maWx0ZXJPcHRpb25zKCk7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyh7IHNlbGVjdGVkT3B0aW9uIH06IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuICAgIGlmIChzZWxlY3RlZE9wdGlvbiAmJiAhc2VsZWN0ZWRPcHRpb24uZmlyc3RDaGFuZ2UgJiYgc2VsZWN0ZWRPcHRpb24uY3VycmVudFZhbHVlICE9PSBzZWxlY3RlZE9wdGlvbi5wcmV2aW91c1ZhbHVlKSB0aGlzLmZpbHRlck9wdGlvbnMoKTtcclxuICB9XHJcblxyXG4gIGZpbHRlck9wdGlvbnMoKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5zZWxlY3RlZE9wdGlvbilcclxuICAgICAgdGhpcy5mb3JtR3JvdXAuY29udHJvbHMuaW5wdXQuc2V0VmFsdWUodGhpcy5zZWxlY3RlZE9wdGlvblt0aGlzLm1vZGVsUHJvcGVydHldKTtcclxuICB9XHJcblxyXG4gIGNsb3NlUG9wb3ZlciA9ICgpID0+IHRoaXMuc2hvd09wdGlvbnMgPSBmYWxzZTtcclxuXHJcbiAgZ2V0T3B0aW9uKG9wdGlvbjogYW55KSB7XHJcbiAgICB0aGlzLnNlbGVjdGVkT3B0aW9uID0gb3B0aW9uO1xyXG4gICAgdGhpcy52YWx1ZUNoYW5nZXMuZW1pdCh0aGlzLnNlbGVjdGVkT3B0aW9uKTtcclxuICAgIHRoaXMuZm9ybUdyb3VwLmNvbnRyb2xzLmlucHV0LnNldFZhbHVlKG9wdGlvblt0aGlzLm1vZGVsUHJvcGVydHldKTtcclxuICAgIHRoaXMuY2xvc2VQb3BvdmVyKCk7XHJcbiAgfVxyXG5cclxufVxyXG4iLCI8ZGl2IGNsYXNzPVwiY29udGVudFwiPlxyXG4gIDxkaXYgY2xhc3M9XCJyb3ctZm9ybSBwb3NpdGlvbi1yZWxhdGl2ZVwiICNjb250ZW50PlxyXG4gICAgPGRpdiBjbGFzcz1cImNvdW50cnktZmxhZ1wiICpuZ0lmPVwic2VsZWN0ZWRPcHRpb25cIj5cclxuICAgICAgPG5nLWNvbnRhaW5lclxyXG4gICAgICAgICpuZ1RlbXBsYXRlT3V0bGV0PVwiXHJcbiAgICAgICAgICBzZWxlY3RlZFRlbXBsYXRlO1xyXG4gICAgICAgICAgY29udGV4dDogeyAkaW1wbGljaXQ6IHNlbGVjdGVkT3B0aW9uIH1cclxuICAgICAgICBcIlxyXG4gICAgICA+PC9uZy1jb250YWluZXI+XHJcbiAgICA8L2Rpdj5cclxuXHJcbiAgICA8Zm9ybSBbZm9ybUdyb3VwXT1cImZvcm1Hcm91cFwiPlxyXG4gICAgICA8aW5wdXRcclxuICAgICAgICB0eXBlPVwidGV4dFwiXHJcbiAgICAgICAgKGZvY3VzKT1cInNob3dPcHRpb25zID0gdHJ1ZVwiXHJcbiAgICAgICAgW2F0dHIucGxhY2Vob2xkZXJdPVwicGxhY2Vob2xkZXJcIlxyXG4gICAgICAgIGZvcm1Db250cm9sTmFtZT1cImlucHV0XCJcclxuICAgICAgICBbY2xhc3Mubm90LWVtcHR5XT1cInNlbGVjdGVkT3B0aW9uW21vZGVsUHJvcGVydHldXCJcclxuICAgICAgICBbY2xhc3Muc3VjY2Vzc109XCJpc1ZhbGlkXCJcclxuICAgICAgICByZWFkb25seVxyXG4gICAgICAgIGlkPVwic2VsZWN0XCJcclxuICAgICAgLz5cclxuICAgICAgPGxhYmVsIGZvcj1cInNlbGVjdFwiPmNvZGU8L2xhYmVsPlxyXG4gICAgPC9mb3JtPlxyXG5cclxuICAgIDxzcGFuIGNsYXNzPVwiYXJyb3dcIj5cclxuICAgICAgPGkgY2xhc3M9XCJiaSBiaS1jaGV2cm9uLWRvd25cIiAqbmdJZj1cIiFzaG93T3B0aW9uc1wiPjwvaT5cclxuICAgICAgPGkgY2xhc3M9XCJiaSBiaS1jaGV2cm9uLXVwXCIgKm5nSWY9XCJzaG93T3B0aW9uc1wiPjwvaT5cclxuICAgIDwvc3Bhbj5cclxuICA8L2Rpdj5cclxuPC9kaXY+XHJcblxyXG48dWxcclxuICBjbGFzcz1cIm9wdGlvbnMgbS0wXCJcclxuICAqY2RrUG9wb3Zlcj1cIlxyXG4gICAgc2hvd09wdGlvbnM7XHJcbiAgICB0YXJnZXQ6IGNvbnRlbnQ7XHJcbiAgICBjbG9zZTogY2xvc2VQb3BvdmVyO1xyXG4gICAgcG9zaXRpb25zOiAnU0JTVCdcclxuICBcIlxyXG4+XHJcbiAgPG5nLWNvbnRhaW5lclxyXG4gICAgKm5nRm9yPVwiXHJcbiAgICAgIGxldCBpdGVtIG9mIG9wdGlvbnM7XHJcbiAgICAgIGxldCBmaXJzdCA9IGZpcnN0O1xyXG4gICAgICBsZXQgbGFzdCA9IGxhc3Q7XHJcbiAgICAgIGxldCBpbmRleCA9IGluZGV4XHJcbiAgICBcIlxyXG4gID5cclxuICAgIDxsaVxyXG4gICAgICBjbGFzcz1cImN1c3RvbS1vcHRpb25cIlxyXG4gICAgICBbY2xhc3MuZmlyc3RdPVwiZmlyc3RcIlxyXG4gICAgICBbY2xhc3MubGFzdF09XCJsYXN0XCJcclxuICAgICAgKGNsaWNrKT1cImdldE9wdGlvbihpdGVtKVwiXHJcbiAgICA+XHJcbiAgICAgIDxuZy1jb250YWluZXJcclxuICAgICAgICAqbmdUZW1wbGF0ZU91dGxldD1cImN1c3RvbVRlbXBsYXRlOyBjb250ZXh0OiB7ICRpbXBsaWNpdDogaXRlbSwgaW5kZXggfVwiXHJcbiAgICAgID48L25nLWNvbnRhaW5lcj5cclxuICAgIDwvbGk+XHJcbiAgICA8bGkgY2xhc3M9XCJkaXZpZGVyXCIgKm5nSWY9XCJpbmRleCA9PT0gMVwiPjwvbGk+XHJcbiAgPC9uZy1jb250YWluZXI+XHJcbjwvdWw+XHJcbiJdfQ==